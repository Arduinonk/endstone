<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1BanList" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::BanList</compoundname>
    <includes refid="ban__list_8h" local="no">endstone/ban/ban_list.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1BanList_1a409cf606a2985931ed9a7eb51b9362ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::BanList&lt; T &gt;::~BanList</definition>
        <argsstring>()=default</argsstring>
        <name>~BanList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="19" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1aa33e3b87befa2a3b0c9061148b85ae41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const T *</type>
        <definition>virtual const T* endstone::BanList&lt; T &gt;::getBanEntry</definition>
        <argsstring>(std::string target) const =0</argsstring>
        <name>getBanEntry</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1aa091c265b07d34c2c19bbd20baf06261">getBanEntry</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1a8f2ba1e5aa67dc9029988d2935e5a632">getBanEntry</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> by target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry parameter to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T* The corresponding entry, or nullptr if none found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="27" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1aa692e8038fcbe4d7144732193dddc735" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T *</type>
        <definition>virtual T* endstone::BanList&lt; T &gt;::getBanEntry</definition>
        <argsstring>(std::string target)=0</argsstring>
        <name>getBanEntry</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1a7886b982d2d76c065409acea13487128">getBanEntry</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1a27df98f35f99b653eb9f5822a7ea3537">getBanEntry</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> by target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry parameter to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T* The corresponding entry, or nullptr if none found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="35" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1a870bdf81cca7c644ea3fbdfa49c27e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T &amp;</type>
        <definition>virtual T&amp; endstone::BanList&lt; T &gt;::addBan</definition>
        <argsstring>(std::string target, std::optional&lt; std::string &gt; reason, std::optional&lt; BanEntry::Date &gt; expires, std::optional&lt; std::string &gt; source)=0</argsstring>
        <name>addBan</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1a196f5a82c78d55f3110bda01abcf5936">addBan</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1a3e74f2c99b6d6675e5e2643d87011482">addBan</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>reason</declname>
        </param>
        <param>
          <type>std::optional&lt; BanEntry::Date &gt;</type>
          <declname>expires</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Adds a ban to this list. If a previous ban exists, this will update the previous entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target of the ban. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>The reason for the ban, std::nullopt indicates implementation default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expires</parametername>
</parameternamelist>
<parameterdescription>
<para>The date for the ban&apos;s expiration (unban), or std::nullopt to imply forever. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The source of the ban, std::nullopt indicates implementation default. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; The entry for the newly created ban, or the entry for the (updated) previous ban. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="46" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1a8946b2cb32e676fb4873dac4bdb6fb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T &amp;</type>
        <definition>virtual T&amp; endstone::BanList&lt; T &gt;::addBan</definition>
        <argsstring>(std::string target, std::optional&lt; std::string &gt; reason, std::chrono::seconds duration, std::optional&lt; std::string &gt; source)=0</argsstring>
        <name>addBan</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1aa61ef61a6580a7caa3fe036471e3e8cf">addBan</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1aff31d80ff757c9ee35c72d7d7f3c1794">addBan</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>reason</declname>
        </param>
        <param>
          <type>std::chrono::seconds</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Adds a ban to this list. If a previous ban exists, this will update the previous entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target of the ban. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>The reason for the ban, std::nullopt indicates implementation default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the ban </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The source of the ban, std::nullopt indicates implementation default. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T&amp; The entry for the newly created ban, or the entry for the (updated) previous ban. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="58" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1ab1566a2dcc04049d8de84682cf908ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; const T * &gt;</type>
        <definition>virtual std::vector&lt;const T *&gt; endstone::BanList&lt; T &gt;::getEntries</definition>
        <argsstring>() const =0</argsstring>
        <name>getEntries</name>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1ab458330db7628667635c187ac560e633">getEntries</reimplementedby>
        <reimplementedby refid="classendstone_1_1IpBanList_1a048c5999bd866b389bda8f4936f99ed3">getEntries</reimplementedby>
        <briefdescription>
<para>Gets a vector containing pointers to every <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> in this list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector containing pointers to every entry tracked by this list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="66" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1a07e80dd01440e4d3efd50dc62e873677" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; T * &gt;</type>
        <definition>virtual std::vector&lt;T *&gt; endstone::BanList&lt; T &gt;::getEntries</definition>
        <argsstring>()=0</argsstring>
        <name>getEntries</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1af132010dbe348cea18b62f3a56f46d69">getEntries</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1a352403913b003022503abc667035c461">getEntries</reimplementedby>
        <briefdescription>
<para>Gets a vector containing pointers to every <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> in this list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector containing pointers to every entry tracked by this list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="73" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1a7fd3e0a897b072736e9df35d91b12c19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::BanList&lt; T &gt;::isBanned</definition>
        <argsstring>(std::string target) const =0</argsstring>
        <name>isBanned</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1a65ab85f06f3522ee90ec267859db0054">isBanned</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1a61d16ed125ebe7dd63d54ce01ca7c886">isBanned</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Checks if a <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> exists for the target, indicating an active ban status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to find. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true If a <ref refid="classendstone_1_1BanEntry" kindref="compound">BanEntry</ref> exists for the target, indicating an active ban status. </para>
</simplesect>
<simplesect kind="return"><para>false Otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="82" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanList_1abefb6ec9f4a696e98609579e3b87718a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanList&lt; T &gt;::removeBan</definition>
        <argsstring>(std::string target)=0</argsstring>
        <name>removeBan</name>
        <reimplementedby refid="classendstone_1_1IpBanList_1ac87901f151c53c57c5ae8267c7b7d601">removeBan</reimplementedby>
        <reimplementedby refid="classendstone_1_1PlayerBanList_1aad775f3d7c09741817b4768a1e56a31a">removeBan</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Removes the specified target from this list, therefore indicating a &quot;not banned&quot; status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to remove from this list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_list.h" line="89" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a ban list, containing bans. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The ban target </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/endstone/ban/ban_list.h" line="17" column="1" bodyfile="include/endstone/ban/ban_list.h" bodystart="17" bodyend="90"/>
    <listofallmembers>
      <member refid="classendstone_1_1BanList_1a870bdf81cca7c644ea3fbdfa49c27e71" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>addBan</name></member>
      <member refid="classendstone_1_1BanList_1a8946b2cb32e676fb4873dac4bdb6fb4c" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>addBan</name></member>
      <member refid="classendstone_1_1BanList_1aa33e3b87befa2a3b0c9061148b85ae41" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>getBanEntry</name></member>
      <member refid="classendstone_1_1BanList_1aa692e8038fcbe4d7144732193dddc735" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>getBanEntry</name></member>
      <member refid="classendstone_1_1BanList_1ab1566a2dcc04049d8de84682cf908ae3" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>getEntries</name></member>
      <member refid="classendstone_1_1BanList_1a07e80dd01440e4d3efd50dc62e873677" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>getEntries</name></member>
      <member refid="classendstone_1_1BanList_1a7fd3e0a897b072736e9df35d91b12c19" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>isBanned</name></member>
      <member refid="classendstone_1_1BanList_1abefb6ec9f4a696e98609579e3b87718a" prot="public" virt="pure-virtual"><scope>endstone::BanList</scope><name>removeBan</name></member>
      <member refid="classendstone_1_1BanList_1a409cf606a2985931ed9a7eb51b9362ea" prot="public" virt="virtual"><scope>endstone::BanList</scope><name>~BanList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
