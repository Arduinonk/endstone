<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="conceptendstone_1_1Keyed" kind="concept">
    <compoundname>endstone::Keyed</compoundname>
    <includes refid="registry_8h" local="no">endstone/registry.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <initializer>template&lt;typename T&gt;
concept <ref refid="conceptendstone_1_1Keyed" kindref="compound">endstone::Keyed</ref> =  requires(const T &amp;t) {
    {
        t.getKey()
    } -&gt; std::convertible_to&lt;std::string_view&gt;;
}    </initializer>
    <briefdescription>
<para>Concept that requires T to provide a key via getKey(). </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type that must implement getKey() returning std::string_view. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/endstone/registry.h" line="30" column="1"/>
  </compounddef>
</doxygen>
