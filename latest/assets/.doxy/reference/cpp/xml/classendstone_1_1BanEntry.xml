<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1BanEntry" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::BanEntry</compoundname>
    <includes refid="ban__entry_8h" local="no">endstone/ban/ban_entry.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a67c78bf82836dc9bfaac0dcb05aa351b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::BanEntry&lt; T &gt;::~BanEntry</definition>
        <argsstring>()=default</argsstring>
        <name>~BanEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="38" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1ab68551161f00c313a0553dc0c3a2652c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>T &amp;</type>
        <definition>virtual T&amp; endstone::BanEntry&lt; T &gt;::getTarget</definition>
        <argsstring>() const =0</argsstring>
        <name>getTarget</name>
        <briefdescription>
<para>Gets the target involved. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the target, e.g. profile or IP address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="45" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a82eadf890a3eed85d19aa19cef3e222f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::chrono::system_clock::time_point</type>
        <definition>virtual std::chrono::system_clock::time_point endstone::BanEntry&lt; T &gt;::getCreated</definition>
        <argsstring>() const =0</argsstring>
        <name>getCreated</name>
        <briefdescription>
<para>Gets the date this ban entry was created. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the creation date </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="52" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a58af6d0112ac795a95d64cb4acf8c724" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::setCreated</definition>
        <argsstring>(std::chrono::system_clock::time_point created)=0</argsstring>
        <name>setCreated</name>
        <param>
          <type>std::chrono::system_clock::time_point</type>
          <declname>created</declname>
        </param>
        <briefdescription>
<para>Sets the date this ban entry was created. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>created</parametername>
</parameternamelist>
<parameterdescription>
<para>the new created date </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> saving changes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="60" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1ac896cd14c4ebe67c444f282a2f516232" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::BanEntry&lt; T &gt;::getSource</definition>
        <argsstring>() const =0</argsstring>
        <name>getSource</name>
        <briefdescription>
<para>Gets the source of this ban. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the source of the ban </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="67" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a37561d6a331ad46ccec868b0f46972f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::setSource</definition>
        <argsstring>(std::string source)=0</argsstring>
        <name>setSource</name>
        <param>
          <type>std::string</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Sets the source of this ban. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the new source </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> saving changes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="75" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a8ba67dc34c9780f541a24700c29a3311" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; std::chrono::system_clock::time_point &gt;</type>
        <definition>virtual std::optional&lt;std::chrono::system_clock::time_point&gt; endstone::BanEntry&lt; T &gt;::getExpiration</definition>
        <argsstring>() const =0</argsstring>
        <name>getExpiration</name>
        <briefdescription>
<para>Gets the date this ban expires on, or std::nullopt for no defined end date. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the expiration date </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="82" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a0585068eae70fe1251b864b61493c3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::setExpiration</definition>
        <argsstring>(std::optional&lt; std::chrono::system_clock::time_point &gt; expiration)=0</argsstring>
        <name>setExpiration</name>
        <param>
          <type>std::optional&lt; std::chrono::system_clock::time_point &gt;</type>
          <declname>expiration</declname>
        </param>
        <briefdescription>
<para>Sets the date this ban expires on. std::nullopt values are considered &quot;infinite&quot; bans. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expiration</parametername>
</parameternamelist>
<parameterdescription>
<para>the new expiration date, or std::nullopt to indicate an eternity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> saving changes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="90" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1ae2979157e4591efc514acafebb1dab8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; std::string &gt;</type>
        <definition>virtual std::optional&lt;std::string&gt; endstone::BanEntry&lt; T &gt;::getReason</definition>
        <argsstring>() const =0</argsstring>
        <name>getReason</name>
        <briefdescription>
<para>Gets the reason for this ban. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the ban reason, or std::nullopt if not set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="97" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1abf22b8452f7e90febb376632505f04fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::setReason</definition>
        <argsstring>(std::optional&lt; std::string &gt; reason)=0</argsstring>
        <name>setReason</name>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Sets the reason for this ban. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>the new reason, std::nullopt values assume the implementation default </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> saving changes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="105" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::save</definition>
        <argsstring>()=0</argsstring>
        <name>save</name>
        <briefdescription>
<para>Saves the ban entry, overwriting any previous data in the ban list. </para>
        </briefdescription>
        <detaileddescription>
<para>Saving the ban entry of an unbanned player will cause the player to be banned once again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="112" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BanEntry_1a836ef65edc301c8e48ddb6b0045d3950" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::BanEntry&lt; T &gt;::remove</definition>
        <argsstring>()=0</argsstring>
        <name>remove</name>
        <briefdescription>
<para>Removes this ban entry from the appropriate ban list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/ban/ban_entry.h" line="117" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A single entry from a ban list. This may represent either a player ban or an IP ban. </para>
    </briefdescription>
    <detaileddescription>
<para>Unsaved information is not automatically written to the implementation&apos;s ban list, instead, the <ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> method must be called to write the changes to the ban list. If this ban entry has expired (such as from an unban) and is no longer found in the list, the <ref refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" kindref="member">save()</ref> call will re-add it to the list, therefore banning the victim specified.</para>
<para>Likewise, changes to the associated <ref refid="classendstone_1_1BanList" kindref="compound">BanList</ref> or other entries may or may not be reflected in this entry.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The ban target </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/endstone/ban/ban_entry.h" line="35" column="1" bodyfile="include/endstone/ban/ban_entry.h" bodystart="35" bodyend="118"/>
    <listofallmembers>
      <member refid="classendstone_1_1BanEntry_1a82eadf890a3eed85d19aa19cef3e222f" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>getCreated</name></member>
      <member refid="classendstone_1_1BanEntry_1a8ba67dc34c9780f541a24700c29a3311" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>getExpiration</name></member>
      <member refid="classendstone_1_1BanEntry_1ae2979157e4591efc514acafebb1dab8b" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>getReason</name></member>
      <member refid="classendstone_1_1BanEntry_1ac896cd14c4ebe67c444f282a2f516232" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>getSource</name></member>
      <member refid="classendstone_1_1BanEntry_1ab68551161f00c313a0553dc0c3a2652c" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>getTarget</name></member>
      <member refid="classendstone_1_1BanEntry_1a836ef65edc301c8e48ddb6b0045d3950" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>remove</name></member>
      <member refid="classendstone_1_1BanEntry_1a337bee705f69e694a899e1043c454e13" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>save</name></member>
      <member refid="classendstone_1_1BanEntry_1a58af6d0112ac795a95d64cb4acf8c724" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>setCreated</name></member>
      <member refid="classendstone_1_1BanEntry_1a0585068eae70fe1251b864b61493c3c2" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>setExpiration</name></member>
      <member refid="classendstone_1_1BanEntry_1abf22b8452f7e90febb376632505f04fa" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>setReason</name></member>
      <member refid="classendstone_1_1BanEntry_1a37561d6a331ad46ccec868b0f46972f1" prot="public" virt="pure-virtual"><scope>endstone::BanEntry</scope><name>setSource</name></member>
      <member refid="classendstone_1_1BanEntry_1a67c78bf82836dc9bfaac0dcb05aa351b" prot="public" virt="virtual"><scope>endstone::BanEntry</scope><name>~BanEntry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
