<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1Permissible" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::Permissible</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; Permissible &gt;</basecompoundref>
    <derivedcompoundref refid="classendstone_1_1CommandSender" prot="public" virt="non-virtual">endstone::CommandSender</derivedcompoundref>
    <includes refid="permissible_8h" local="no">endstone/permissions/permissible.h</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classendstone_1_1Permissible_1a79d614f6982271b55b3a73dd8aeea697" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>endstone::Permissible::Permissible</definition>
        <argsstring>()</argsstring>
        <name>Permissible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="36" column="14" bodyfile="include/endstone/permissions/permissible.h" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Permissible_1afd630275e217c42932d29208712fe438" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::Permissible::~Permissible</definition>
        <argsstring>()=default</argsstring>
        <name>~Permissible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="39" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a337e6323e8e49d8ce6e2c16b091e5d53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Permissible::isOp</definition>
        <argsstring>() const =0</argsstring>
        <name>isOp</name>
        <briefdescription>
<para>Checks if this object is a server operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if this is an operator, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="46" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a2cf4819b46b03d25c17f1fa15a679233" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Permissible::setOp</definition>
        <argsstring>(bool value)=0</argsstring>
        <name>setOp</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the operator status of this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New operator value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="53" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae625f98f57116c559dc35a6cfce960d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Permissible::isPermissionSet</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>isPermissionSet</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if this object contains an override for the specified permission, by fully qualified name</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the permission is set, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="61" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1af40d6121208b293a05abf56c47792995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Permissible::isPermissionSet</definition>
        <argsstring>(const Permission &amp;perm) const =0</argsstring>
        <name>isPermissionSet</name>
        <param>
          <type>const <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if this object contains an override for the specified <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the permission is set, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="69" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ade03215666f81be410f2b058fa2c158b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Permissible::hasPermission</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>hasPermission</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value of the specified permission, if set. If a permission override is not set on this object, the default value of the permission will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="78" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae3da30350acda91f5a007e15fc783ae6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Permissible::hasPermission</definition>
        <argsstring>(const Permission &amp;perm) const =0</argsstring>
        <name>hasPermission</name>
        <param>
          <type>const <ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value of the specified permission, if set. If a permission override is not set on this object, the default value of the permission will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Permission" kindref="compound">Permission</ref> to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="87" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a8594c12d218b5bdc56be5fd00f8ea39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> * &gt;</type>
        <definition>virtual Result&lt;PermissionAttachment *&gt; endstone::Permissible::addAttachment</definition>
        <argsstring>(Plugin &amp;plugin, const std::string &amp;name, bool value)=0</argsstring>
        <name>addAttachment</name>
        <param>
          <type><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> &amp;</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> with a single permission by name and value</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> responsible for this attachment, may not be null or disabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the permission to attach </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the permission </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> that was just created </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="97" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1afe4b77a467e072cb34415918f87ae3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> * &gt;</type>
        <definition>virtual Result&lt;PermissionAttachment *&gt; endstone::Permissible::addAttachment</definition>
        <argsstring>(Plugin &amp;plugin)=0</argsstring>
        <name>addAttachment</name>
        <param>
          <type><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> &amp;</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new empty <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> to this object</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Plugin" kindref="compound">Plugin</ref> responsible for this attachment, may not be null or disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> that was just created </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="105" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a6ee88130abcae19b48e833391505187e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; void &gt;</type>
        <definition>virtual Result&lt;void&gt; endstone::Permissible::removeAttachment</definition>
        <argsstring>(PermissionAttachment &amp;attachment)=0</argsstring>
        <name>removeAttachment</name>
        <param>
          <type><ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> &amp;</type>
          <declname>attachment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the given <ref refid="classendstone_1_1PermissionAttachment" kindref="compound">PermissionAttachment</ref> from this object</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attachment</parametername>
</parameternamelist>
<parameterdescription>
<para>Attachment to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the specified attachment was removed successfully, false when it isn&apos;t part of this object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="113" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1acbd0e4c4815db28b66ef14976f110af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Permissible::recalculatePermissions</definition>
        <argsstring>()=0</argsstring>
        <name>recalculatePermissions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recalculates the permissions for this object, if the attachments have changed values. This should very rarely need to be called from a plugin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1a6a1c1a23b64c890e7eba0409c80571ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unordered_set&lt; <ref refid="classendstone_1_1PermissionAttachmentInfo" kindref="compound">PermissionAttachmentInfo</ref> * &gt;</type>
        <definition>virtual std::unordered_set&lt;PermissionAttachmentInfo *&gt; endstone::Permissible::getEffectivePermissions</definition>
        <argsstring>() const =0</argsstring>
        <name>getEffectivePermissions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a set containing all of the permissions currently in effect by this object</para>
<para><simplesect kind="return"><para>Set of currently effective permissions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="126" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1aed8659219fb404113107df3d35216ebf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> *</type>
        <definition>virtual CommandSender* endstone::Permissible::asCommandSender</definition>
        <argsstring>() const =0</argsstring>
        <name>asCommandSender</name>
        <reimplementedby refid="classendstone_1_1CommandSender_1a0ddeae541cef266a6dd95f9253da8a3d">asCommandSender</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="128" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae62482c60fcaae47e38450a70a529613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; Derived &gt;</type>
        <definition>std::shared_ptr&lt;Derived&gt; endstone::Permissible::shared_from_base</definition>
        <argsstring>()</argsstring>
        <name>shared_from_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="131" column="21" bodyfile="include/endstone/permissions/permissible.h" bodystart="131" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classendstone_1_1Permissible_1ae78ea6f08d91e1f1bfa5bb0fe3a12284" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; Derived &gt;</type>
        <definition>static std::shared_ptr&lt;Derived&gt; endstone::Permissible::create0</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>create0</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/permissions/permissible.h" line="138" column="28" bodyfile="include/endstone/permissions/permissible.h" bodystart="138" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an object that may become a server operator and can be assigned permissions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>endstone::ConsoleCommandSender</label>
        <link refid="classendstone_1_1ConsoleCommandSender"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>endstone::ProxiedCommandSender</label>
        <link refid="classendstone_1_1ProxiedCommandSender"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>endstone::Actor</label>
        <link refid="classendstone_1_1Actor"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>endstone::Mob</label>
        <link refid="classendstone_1_1Mob"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>endstone::Player</label>
        <link refid="classendstone_1_1Player"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>endstone::CommandSender</label>
        <link refid="classendstone_1_1CommandSender"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::enable_shared_from_this&lt; Permissible &gt;</label>
      </node>
      <node id="1">
        <label>endstone::Permissible</label>
        <link refid="classendstone_1_1Permissible"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::enable_shared_from_this&lt; Permissible &gt;</label>
      </node>
      <node id="1">
        <label>endstone::Permissible</label>
        <link refid="classendstone_1_1Permissible"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/endstone/permissions/permissible.h" line="34" column="1" bodyfile="include/endstone/permissions/permissible.h" bodystart="34" bodyend="147"/>
    <listofallmembers>
      <member refid="classendstone_1_1Permissible_1a8594c12d218b5bdc56be5fd00f8ea39c" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1afe4b77a467e072cb34415918f87ae3b3" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1aed8659219fb404113107df3d35216ebf" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>asCommandSender</name></member>
      <member refid="classendstone_1_1Permissible_1ae78ea6f08d91e1f1bfa5bb0fe3a12284" prot="protected" virt="non-virtual"><scope>endstone::Permissible</scope><name>create0</name></member>
      <member refid="classendstone_1_1Permissible_1a6a1c1a23b64c890e7eba0409c80571ef" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>getEffectivePermissions</name></member>
      <member refid="classendstone_1_1Permissible_1ade03215666f81be410f2b058fa2c158b" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Permissible_1ae3da30350acda91f5a007e15fc783ae6" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Permissible_1a337e6323e8e49d8ce6e2c16b091e5d53" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isOp</name></member>
      <member refid="classendstone_1_1Permissible_1ae625f98f57116c559dc35a6cfce960d9" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Permissible_1af40d6121208b293a05abf56c47792995" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Permissible_1a79d614f6982271b55b3a73dd8aeea697" prot="protected" virt="non-virtual"><scope>endstone::Permissible</scope><name>Permissible</name></member>
      <member refid="classendstone_1_1Permissible_1acbd0e4c4815db28b66ef14976f110af5" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>recalculatePermissions</name></member>
      <member refid="classendstone_1_1Permissible_1a6ee88130abcae19b48e833391505187e" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>removeAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1a2cf4819b46b03d25c17f1fa15a679233" prot="public" virt="pure-virtual"><scope>endstone::Permissible</scope><name>setOp</name></member>
      <member refid="classendstone_1_1Permissible_1ae62482c60fcaae47e38450a70a529613" prot="public" virt="non-virtual"><scope>endstone::Permissible</scope><name>shared_from_base</name></member>
      <member refid="classendstone_1_1Permissible_1afd630275e217c42932d29208712fe438" prot="public" virt="virtual"><scope>endstone::Permissible</scope><name>~Permissible</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
