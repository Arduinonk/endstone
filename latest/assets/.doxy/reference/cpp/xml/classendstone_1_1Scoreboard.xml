<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1Scoreboard" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::Scoreboard</compoundname>
    <includes refid="scoreboard_8h" local="no">endstone/scoreboard/scoreboard.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a3353d465636fad59aab0c4656f80ff37" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::Scoreboard::~Scoreboard</definition>
        <argsstring>()=default</argsstring>
        <name>~Scoreboard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="31" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a9a2c034ebe47dd1b9dd09044e5d3d88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> &amp;</type>
        <definition>virtual Objective&amp; endstone::Scoreboard::addObjective</definition>
        <argsstring>(std::string name, Criteria::Type criteria)=0</argsstring>
        <name>addObjective</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Criteria_1a31b8a6a25a4c37fa964fc34563a882d1" kindref="member">Criteria::Type</ref></type>
          <declname>criteria</declname>
        </param>
        <briefdescription>
<para>Registers an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>criteria</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> for the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the newly registered <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref>. If an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> with the given name already exists, a reference to that existing <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> is returned instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="41" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a52f7fbe53b358c533f08f16d08aca8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> &amp;</type>
        <definition>virtual Objective&amp; endstone::Scoreboard::addObjective</definition>
        <argsstring>(std::string name, Criteria::Type criteria, std::string display_name)=0</argsstring>
        <name>addObjective</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Criteria_1a31b8a6a25a4c37fa964fc34563a882d1" kindref="member">Criteria::Type</ref></type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>display_name</declname>
        </param>
        <briefdescription>
<para>Registers an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>criteria</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> type for the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name displayed to players for the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the newly registered <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref>. If an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> with the given name already exists, a reference to that existing <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> is returned instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="52" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1ad13a301b949a41a396a4469505c9eaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> &amp;</type>
        <definition>virtual Objective&amp; endstone::Scoreboard::addObjective</definition>
        <argsstring>(std::string name, Criteria::Type criteria, std::string display_name, RenderType render_type)=0</argsstring>
        <name>addObjective</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classendstone_1_1Criteria_1a31b8a6a25a4c37fa964fc34563a882d1" kindref="member">Criteria::Type</ref></type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>display_name</declname>
        </param>
        <param>
          <type>RenderType</type>
          <declname>render_type</declname>
        </param>
        <briefdescription>
<para>Registers an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>criteria</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> type for the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name displayed to players for the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>render_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Manner of rendering the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the newly registered <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref>. If an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> with the given name already exists, a reference to that existing <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> is returned instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="64" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a98ebece3a5334d51925b622a489b953e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> *</type>
        <definition>virtual Objective* endstone::Scoreboard::getObjective</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>getObjective</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets an <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref> by name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> or <computeroutput>nullptr</computeroutput> if it does not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="73" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a9f491cf1b01c405c861b95e1167ae756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> *</type>
        <definition>virtual Objective* endstone::Scoreboard::getObjective</definition>
        <argsstring>(DisplaySlot slot) const =0</argsstring>
        <name>getObjective</name>
        <param>
          <type>DisplaySlot</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Gets the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> currently displayed in a DisplaySlot on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The DisplaySlot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> currently displayed or <computeroutput>nullptr</computeroutput> if nothing is displayed in that DisplaySlot </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="81" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a04f09d0524072058cfe2faea46e9f34e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> * &gt;</type>
        <definition>virtual std::vector&lt;Objective *&gt; endstone::Scoreboard::getObjectives</definition>
        <argsstring>() const =0</argsstring>
        <name>getObjectives</name>
        <briefdescription>
<para>Gets all Objectives on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of all Objectives on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="88" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a9243e23ad59ce3ce6f797e9254041a42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="classendstone_1_1Objective" kindref="compound">Objective</ref> * &gt;</type>
        <definition>virtual std::vector&lt;Objective *&gt; endstone::Scoreboard::getObjectivesByCriteria</definition>
        <argsstring>(Criteria::Type criteria) const =0</argsstring>
        <name>getObjectivesByCriteria</name>
        <param>
          <type><ref refid="classendstone_1_1Criteria_1a31b8a6a25a4c37fa964fc34563a882d1" kindref="member">Criteria::Type</ref></type>
          <declname>criteria</declname>
        </param>
        <briefdescription>
<para>Gets all Objectives of a <ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> on the <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>criteria</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> type to search by </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of Objectives using the specified <ref refid="classendstone_1_1Criteria" kindref="compound">Criteria</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="96" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a9c8c74535fa8b7347977c4b29cd632fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="classendstone_1_1Score" kindref="compound">Score</ref> * &gt;</type>
        <definition>virtual std::vector&lt;Score *&gt; endstone::Scoreboard::getScores</definition>
        <argsstring>(ScoreEntry entry) const =0</argsstring>
        <name>getScores</name>
        <param>
          <type>ScoreEntry</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Gets all scores for an entry on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry whose scores are being retrieved </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of all scores tracked for the entry </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="104" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a4fccb1898db7abf83738d9c2ffce27ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Scoreboard::resetScores</definition>
        <argsstring>(ScoreEntry entry)=0</argsstring>
        <name>resetScores</name>
        <param>
          <type>ScoreEntry</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Removes all scores for an entry on this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry to drop all current scores for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="111" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1a34423dec12f04dfc311a2d52ab2da93a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; ScoreEntry &gt;</type>
        <definition>virtual std::vector&lt;ScoreEntry&gt; endstone::Scoreboard::getEntries</definition>
        <argsstring>() const =0</argsstring>
        <name>getEntries</name>
        <briefdescription>
<para>Gets all entries tracked by this <ref refid="classendstone_1_1Scoreboard" kindref="compound">Scoreboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of all tracked entries </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="118" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Scoreboard_1ab2486b647e947f8f0a87350fda36a786" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Scoreboard::clearSlot</definition>
        <argsstring>(DisplaySlot slot)=0</argsstring>
        <name>clearSlot</name>
        <param>
          <type>DisplaySlot</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Clears any objective in the specified slot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot to remove objectives </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/scoreboard/scoreboard.h" line="125" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a scoreboard. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/endstone/scoreboard/scoreboard.h" line="29" column="1" bodyfile="include/endstone/scoreboard/scoreboard.h" bodystart="29" bodyend="126"/>
    <listofallmembers>
      <member refid="classendstone_1_1Scoreboard_1a9a2c034ebe47dd1b9dd09044e5d3d88c" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>addObjective</name></member>
      <member refid="classendstone_1_1Scoreboard_1a52f7fbe53b358c533f08f16d08aca8b9" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>addObjective</name></member>
      <member refid="classendstone_1_1Scoreboard_1ad13a301b949a41a396a4469505c9eaf4" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>addObjective</name></member>
      <member refid="classendstone_1_1Scoreboard_1ab2486b647e947f8f0a87350fda36a786" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>clearSlot</name></member>
      <member refid="classendstone_1_1Scoreboard_1a34423dec12f04dfc311a2d52ab2da93a" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getEntries</name></member>
      <member refid="classendstone_1_1Scoreboard_1a98ebece3a5334d51925b622a489b953e" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getObjective</name></member>
      <member refid="classendstone_1_1Scoreboard_1a9f491cf1b01c405c861b95e1167ae756" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getObjective</name></member>
      <member refid="classendstone_1_1Scoreboard_1a04f09d0524072058cfe2faea46e9f34e" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getObjectives</name></member>
      <member refid="classendstone_1_1Scoreboard_1a9243e23ad59ce3ce6f797e9254041a42" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getObjectivesByCriteria</name></member>
      <member refid="classendstone_1_1Scoreboard_1a9c8c74535fa8b7347977c4b29cd632fd" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>getScores</name></member>
      <member refid="classendstone_1_1Scoreboard_1a4fccb1898db7abf83738d9c2ffce27ba" prot="public" virt="pure-virtual"><scope>endstone::Scoreboard</scope><name>resetScores</name></member>
      <member refid="classendstone_1_1Scoreboard_1a3353d465636fad59aab0c4656f80ff37" prot="public" virt="virtual"><scope>endstone::Scoreboard</scope><name>~Scoreboard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
